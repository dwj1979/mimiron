spring:
  profiles:
    active: dev
    include: swagger
  devtools:
    restart:
      enabled: true
    livereload:
      enabled: false
  jackson:
      serialization.indent_output: true
  cloud:
    consul:
      discovery:
        prefer-ip-address: true
      host: localhost
      port: 8500
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    url: jdbc:h2:file:./mimiron-service/target/h2db/db/service;DB_CLOSE_DELAY=-1
    username: service
    password:
  h2:
    console:
      enabled: false
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    database: H2
    show-sql: true
    properties:
      hibernate.id.new_generator_mappings: true
      hibernate.cache.use_second_level_cache: true
      hibernate.cache.use_query_cache: false
      hibernate.generate_statistics: true
      hibernate.cache.region.factory_class: com.hazelcast.hibernate.HazelcastCacheRegionFactory
      hibernate.cache.hazelcast.instance_name: service
      hibernate.cache.use_minimal_puts: true
      hibernate.cache.hazelcast.use_lite_member: true
  mail:
    host: localhost
    port: 25
    username:
    password:
  thymeleaf:
    cache: false
  zipkin: # Use the "zipkin" Maven profile to have the Spring Cloud Zipkin dependencies
    base-url: http://localhost:9411
    enabled: false
    locator:
      discovery:
        enabled: true

server:
  port: 8081

mimiron:
  cache: # Cache configuration
    hazelcast: # Hazelcast distributed cache
      time-to-live-seconds: 3600
      backup-count: 1
  # CORS is disabled by default on microservices, as you should access them through a gateway.
  # If you want to enable it, please uncomment the configuration below.
  # cors:
    # allowed-origins: "*"
    # allowed-methods: "*"
    # allowed-headers: "*"
    # exposed-headers: "Authorization"
    # allow-credentials: true
    # max-age: 1800
  security:
    client-authorization:
      access-token-uri: http://uaa/oauth/token
      token-service-id: uaa
      client-id: internal
      client-secret: internal

oauth2:
  signature-verification:
    public-key-endpoint-uri: http://uaa/oauth/token_key
    #ttl for public keys to verify JWT tokens (in ms)
    ttl: 3600000
    #max. rate at which public keys will be fetched (in ms)
    public-key-refresh-rate-limit: 10000
  web-client-configuration:
    #keep in sync with UAA configuration
    client-id: web_app
    secret: changeit
